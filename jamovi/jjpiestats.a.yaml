---
name:  jjpiestats
title: Pie Charts
menuGroup: JJStatsPlot
menuSubgroup: 'Categorical vs Categorical'
# menuSubtitle: 'Pie Charts'
version: '0.0.31'
jas: '1.2'



description:
    main: |
        'Wrapper Function for ggstatsplot::ggpiestats and
        ggstatsplot::grouped_ggpiestats to generate Pie Charts with
        statistical analysis.'
    R:
        dontrun: true
        usage: |
            # Load test data
            data(jjpiestats_test_data)
            
            # Basic pie chart
            jjpiestats(
              data = jjpiestats_test_data,
              dep = "treatment_response",
              typestatistics = "parametric"
            )
            
            # Pie chart with grouping
            jjpiestats(
              data = jjpiestats_test_data,
              dep = "treatment_response",
              group = "treatment_arm",
              resultssubtitle = TRUE
            )
            
            # Grouped pie charts by split variable
            jjpiestats(
              data = jjpiestats_test_data,
              dep = "disease_severity",
              group = "gender",
              grvar = "hospital_site",
              typestatistics = "nonparametric"
            )

options:
    - name: data
      type: Data
      description:
          R: >
            The data as a data frame.


    - name: dep
      title: Dependent Variable
      type: Variable
      suggested: [ ordinal, nominal ]
      permitted: [ factor ]
      description:
          R: >
            The categorical variable to display in the pie chart. This variable
            will be used to create pie slices representing the proportion of each
            category. Must be a factor variable.

    - name: group
      title: 'Grouping Variable: (Optional)'
      type: Variable
      suggested: [ ordinal, nominal ]
      permitted: [ factor ]
      default: NULL
      description:
          R: >
            Optional grouping variable for creating contingency table analysis.
            When specified, creates a 2x2 or 2xN contingency table and performs
            association tests (Chi-square, Fisher's exact test, etc.).

    - name: grvar
      title: 'Split By (Optional)'
      type: Variable
      suggested: [ ordinal, nominal ]
      permitted: [ factor ]
      default: NULL
      description:
          R: >
            Optional variable to create separate pie charts for each level of this
            grouping variable. Creates a panel of pie charts, one for each group
            level (e.g., separate charts by treatment center or study site).


    - name: typestatistics
      title: 'Type of Statistic'
      type: List
      options:
        - title: Parametric
          name: parametric
        - title: Nonparametric
          name: nonparametric
        - title: Robust
          name: robust
        - title: Bayes
          name: bayes
      default: parametric
      description:
          R: >
            Type of statistical test for categorical association analysis.
            'parametric' uses Pearson's Chi-square test, 'nonparametric' uses
            contingency table tests, 'robust' uses robust association measures,
            'bayes' provides Bayesian analysis with Bayes factors.


    - name: originaltheme
      title: Add GGStatsPlot Layer
      type: Bool
      default: false
      description:
          R: >
            Whether to apply the original ggstatsplot theme layer to the plot.
            If TRUE, uses ggstatsplot's default styling. If FALSE, uses jamovi's
            default ggplot2 theme for consistency with other analyses.

    - name: resultssubtitle
      title: Statistical Results
      type: Bool
      default: false
      description:
          R: >
            Whether to display statistical test results as subtitle in the pie chart.
            Shows test statistics, p-values, effect sizes, and confidence intervals
            for categorical association tests. Provides detailed statistical summary.


...

# ggpiestats(
#   data,
#   x,
#   y = NULL,
#   counts = NULL,
#   ratio = NULL,
#   paired = FALSE,
#   results.subtitle = TRUE,
#   label = "percentage",
#   label.args = list(direction = "both"),
#   label.repel = FALSE,
#   conf.level = 0.95,
#   k = 2L,
#   proportion.test = TRUE,
#   perc.k = 0,
#   bf.message = TRUE,
#   sampling.plan = "indepMulti",
#   fixed.margin = "rows",
#   prior.concentration = 1,
#   title = NULL,
#   subtitle = NULL,
#   caption = NULL,
#   legend.title = NULL,
#   ggtheme = ggplot2::theme_bw(),
#   ggstatsplot.layer = TRUE,
#   package = "RColorBrewer",
#   palette = "Dark2",
#   ggplot.component = NULL,
#   output = "plot",
#   ...
# )
# Arguments
# data
# A dataframe (or a tibble) from which variables specified are to be taken. A matrix or tables will not be accepted.
#
# x
# The variable to use as the rows in the contingency table.
#
# y
# The variable to use as the columns in the contingency table. Default is NULL. If NULL, one-sample proportion test (a goodness of fit test) will be run for the x variable. Otherwise an appropriate association test will be run. This argument can not be NULL for ggbarstats function.
#
# counts
# A string naming a variable in data containing counts, or NULL if each row represents a single observation.
#
# ratio
# A vector of proportions: the expected proportions for the proportion test (should sum to 1). Default is NULL, which means the null is equal theoretical proportions across the levels of the nominal variable. This means if there are two levels this will be ratio = c(0.5,0.5) or if there are four levels this will be ratio = c(0.25,0.25,0.25,0.25), etc.
#
# paired
# Logical indicating whether data came from a within-subjects or repeated measures design study (Default: FALSE). If TRUE, McNemar's test subtitle will be returned. If FALSE, Pearson's chi-square test will be returned.
#
# results.subtitle
# Decides whether the results of statistical tests are to be displayed as a subtitle (Default: TRUE). If set to FALSE, only the plot will be returned.
#
# label
# Character decides what information needs to be displayed on the label in each pie slice. Possible options are "percentage" (default), "counts", "both".
#
# label.args
# Additional aesthetic arguments that will be passed to geom_label.
#
# label.repel
# Whether labels should be repelled using ggrepel package. This can be helpful in case the labels are overlapping.
#
# conf.level
# Scalar between 0 and 1. If unspecified, the defaults return 95% confidence/credible intervals (0.95).
#
# k
# Number of digits after decimal point (should be an integer) (Default: k = 2L).
#
# proportion.test
# Decides whether proportion test for x variable is to be carried out for each level of y (Default: TRUE).
#
# perc.k
# Numeric that decides number of decimal places for percentage labels (Default: 0).
#
# bf.message
# Logical that decides whether to display Bayes Factor in favor of the null hypothesis. This argument is relevant only for parametric test (Default: TRUE).
#
# sampling.plan
# Character describing the sampling plan. Possible options are "indepMulti" (independent multinomial; default), "poisson", "jointMulti" (joint multinomial), "hypergeom" (hypergeometric). For more, see ?BayesFactor::contingencyTableBF().
#
# fixed.margin
# For the independent multinomial sampling plan, which margin is fixed ("rows" or "cols"). Defaults to "rows".
#
# prior.concentration
# Specifies the prior concentration parameter, set to 1 by default. It indexes the expected deviation from the null hypothesis under the alternative, and corresponds to Gunel and Dickey's (1974) "a" parameter.
#
# title
# The text for the plot title.
#
# subtitle
# The text for the plot subtitle. Will work only if results.subtitle = FALSE.
#
# caption
# The text for the plot caption.
#
# legend.title
# Title text for the legend.
#
# ggtheme
# A function, ggplot2 theme name. Default value is ggplot2::theme_bw(). Any of the ggplot2 themes, or themes from extension packages are allowed (e.g., ggthemes::theme_fivethirtyeight(), hrbrthemes::theme_ipsum_ps(), etc.).
#
# ggstatsplot.layer
# Logical that decides whether theme_ggstatsplot theme elements are to be displayed along with the selected ggtheme (Default: TRUE). theme_ggstatsplot is an opinionated theme layer that override some aspects of the selected ggtheme.
#
# package
# Name of the package from which the given palette is to be extracted. The available palettes and packages can be checked by running View(paletteer::palettes_d_names).
#
# palette
# Name of the package from which the given palette is to be extracted. The available palettes and packages can be checked by running View(paletteer::palettes_d_names).
#
# ggplot.component
# A ggplot component to be added to the plot prepared by ggstatsplot. This argument is primarily helpful for grouped_ variant of the current function. Default is NULL. The argument should be entered as a function.
#
# output
# Character that describes what is to be returned: can be "plot" (default) or "subtitle" or "caption". Setting this to "subtitle" will return the expression containing statistical results. If you have set results.subtitle = FALSE, then this will return a NULL. Setting this to "caption" will return the expression containing details about Bayes Factor analysis, but valid only when type = "parametric" and bf.message = TRUE, otherwise this will return a NULL. For functions ggpiestats and ggbarstats, setting output = "proptest" will return a dataframe containing results from proportion tests.
#
#
#
#
# grouped_ggpiestats(
#   data,
#   x,
#   y = NULL,
#   counts = NULL,
#   grouping.var,
#   title.prefix = NULL,
#   output = "plot",
#   ...,
#   plotgrid.args = list(),
#   title.text = NULL,
#   title.args = list(size = 16, fontface = "bold"),
#   caption.text = NULL,
#   caption.args = list(size = 10),
#   sub.text = NULL,
#   sub.args = list(size = 12)
# )
# Arguments
# data
# A dataframe (or a tibble) from which variables specified are to be taken. A matrix or tables will not be accepted.
#
# x
# The variable to use as the rows in the contingency table.
#
# y
# The variable to use as the columns in the contingency table. Default is NULL. If NULL, one-sample proportion test (a goodness of fit test) will be run for the x variable. Otherwise an appropriate association test will be run. This argument can not be NULL for ggbarstats function.
#
# counts
# A string naming a variable in data containing counts, or NULL if each row represents a single observation.
#
# grouping.var
# A single grouping variable (can be entered either as a bare name x or as a string "x").
#
# title.prefix
# Character string specifying the prefix text for the fixed plot title (name of each factor level) (Default: NULL). If NULL, the variable name entered for grouping.var will be used.
#
# output
# Character that describes what is to be returned: can be "plot" (default) or "subtitle" or "caption". Setting this to "subtitle" will return the expression containing statistical results. If you have set results.subtitle = FALSE, then this will return a NULL. Setting this to "caption" will return the expression containing details about Bayes Factor analysis, but valid only when type = "parametric" and bf.message = TRUE, otherwise this will return a NULL. For functions ggpiestats and ggbarstats, setting output = "proptest" will return a dataframe containing results from proportion tests.
#
# ...
# Arguments passed on to ggpiestats
#
# proportion.test
# Decides whether proportion test for x variable is to be carried out for each level of y (Default: TRUE).
#
# perc.k
# Numeric that decides number of decimal places for percentage labels (Default: 0).
#
# label
# Character decides what information needs to be displayed on the label in each pie slice. Possible options are "percentage" (default), "counts", "both".
#
# label.args
# Additional aesthetic arguments that will be passed to geom_label.
#
# label.repel
# Whether labels should be repelled using ggrepel package. This can be helpful in case the labels are overlapping.
#
# legend.title
# Title text for the legend.
#
# results.subtitle
# Decides whether the results of statistical tests are to be displayed as a subtitle (Default: TRUE). If set to FALSE, only the plot will be returned.
#
# conf.level
# Scalar between 0 and 1. If unspecified, the defaults return 95% confidence/credible intervals (0.95).
#
# k
# Number of digits after decimal point (should be an integer) (Default: k = 2L).
#
# bf.message
# Logical that decides whether to display Bayes Factor in favor of the null hypothesis. This argument is relevant only for parametric test (Default: TRUE).
#
# subtitle
# The text for the plot subtitle. Will work only if results.subtitle = FALSE.
#
# caption
# The text for the plot caption.
#
# ggtheme
# A function, ggplot2 theme name. Default value is ggplot2::theme_bw(). Any of the ggplot2 themes, or themes from extension packages are allowed (e.g., ggthemes::theme_fivethirtyeight(), hrbrthemes::theme_ipsum_ps(), etc.).
#
# ggstatsplot.layer
# Logical that decides whether theme_ggstatsplot theme elements are to be displayed along with the selected ggtheme (Default: TRUE). theme_ggstatsplot is an opinionated theme layer that override some aspects of the selected ggtheme.
#
# package
# Name of the package from which the given palette is to be extracted. The available palettes and packages can be checked by running View(paletteer::palettes_d_names).
#
# palette
# Name of the package from which the given palette is to be extracted. The available palettes and packages can be checked by running View(paletteer::palettes_d_names).
#
# ggplot.component
# A ggplot component to be added to the plot prepared by ggstatsplot. This argument is primarily helpful for grouped_ variant of the current function. Default is NULL. The argument should be entered as a function.
#
# ratio
# A vector of proportions: the expected proportions for the proportion test (should sum to 1). Default is NULL, which means the null is equal theoretical proportions across the levels of the nominal variable. This means if there are two levels this will be ratio = c(0.5,0.5) or if there are four levels this will be ratio = c(0.25,0.25,0.25,0.25), etc.
#
# sampling.plan
# Character describing the sampling plan. Possible options are "indepMulti" (independent multinomial; default), "poisson", "jointMulti" (joint multinomial), "hypergeom" (hypergeometric). For more, see ?BayesFactor::contingencyTableBF().
#
# fixed.margin
# For the independent multinomial sampling plan, which margin is fixed ("rows" or "cols"). Defaults to "rows".
#
# prior.concentration
# Specifies the prior concentration parameter, set to 1 by default. It indexes the expected deviation from the null hypothesis under the alternative, and corresponds to Gunel and Dickey's (1974) "a" parameter.
#
# paired
# Logical indicating whether data came from a within-subjects or repeated measures design study (Default: FALSE). If TRUE, McNemar's test subtitle will be returned. If FALSE, Pearson's chi-square test will be returned.
#
# plotgrid.args
# A list of additional arguments to cowplot::plot_grid.
#
# title.text
# String or plotmath expression to be drawn as title for the combined plot.
#
# title.args
# A list of additional arguments provided to title, caption and sub, resp.
#
# caption.text
# String or plotmath expression to be drawn as the caption for the combined plot.
#
# caption.args
# A list of additional arguments provided to title, caption and sub, resp.
#
# sub.text
# The label with which the combined plot should be annotated. Can be a plotmath expression.
#
# sub.args
# A list of additional arguments provided to title, caption and sub, resp.
#
