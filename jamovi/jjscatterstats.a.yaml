---
name:  jjscatterstats
title: Scatter Plot
menuGroup: JJStatsPlot
menuSubgroup: Continuous vs Continuous
# menuSubtitle: Scatter Plot
version: '0.0.31'
jas: '1.2'



description:
    main: |
        Wrapper Function for ggstatsplot::ggscatterstats and
        ggstatsplot::grouped_ggscatterstats to generate scatter plots
        with correlation analysis and optional marginal distributions.
    R:
        dontrun: true
        usage: |
            # Load test data
            data("mtcars")
            
            # Basic scatter plot with correlation
            jjscatterstats(
              data = mtcars,
              dep = "mpg",       # x-axis
              group = "hp",      # y-axis
              typestatistics = "parametric",
              conflevel = 0.95,
              k = 2
            )
            
            # Scatter plot with marginal histograms
            jjscatterstats(
              data = mtcars,
              dep = "mpg",
              group = "hp",
              marginal = TRUE,
              xsidefill = "#009E73",
              ysidefill = "#D55E00",
              pointsize = 4,
              pointalpha = 0.6,
              smoothlinesize = 2,
              smoothlinecolor = "red"
            )
            
            # Grouped scatter plot by number of cylinders
            jjscatterstats(
              data = mtcars,
              dep = "mpg",
              group = "hp",
              grvar = "cyl",
              typestatistics = "nonparametric",
              bfmessage = FALSE,
              resultssubtitle = TRUE
            )

options:
    - name: data
      type: Data
      description:
          R: >
            The data as a data frame.


    - name: dep
      title: 'x-axis (First Variable)'
      type: Variable
      suggested: [ continuous ]
      permitted: [ numeric ]
      description:
          R: >
            First continuous variable for correlation analysis (e.g., biomarker levels, age, tumor size). 
            This will appear on the horizontal axis. Use numeric variables like lab values, measurements, or scores.

    - name: group
      title: 'y-axis (Second Variable)'
      type: Variable
      suggested: [ continuous ]
      permitted: [ numeric ]
      description:
          R: >
            Second continuous variable for correlation analysis (e.g., expression levels, treatment response, survival time). 
            This will appear on the vertical axis. Use numeric variables that you want to correlate with the x-axis variable.

    - name: grvar
      title: 'Split By (Optional)'
      type: Variable
      default: NULL
      suggested: [ ordinal, nominal ]
      permitted: [ factor ]
      description:
          R: >
            Optional categorical variable to create separate correlation plots for each group
            (e.g., by treatment group, tumor stage, or gender). Creates multiple panels for comparison.

    - name: colorvar
      title: 'Color Variable (Optional)'
      type: Variable
      default: NULL
      suggested: [ ordinal, nominal ]
      permitted: [ factor, numeric ]
      description:
          R: >
            Optional variable to map point colors. When specified, switches to enhanced scatter plot
            with full ggplot2 aesthetic control instead of ggstatsplot correlation analysis.

    - name: sizevar
      title: 'Size Variable (Optional)'
      type: Variable
      default: NULL
      suggested: [ continuous ]
      permitted: [ numeric ]
      description:
          R: >
            Optional continuous variable to map point sizes. When specified, switches to enhanced scatter plot
            with full ggplot2 aesthetic control instead of ggstatsplot correlation analysis.

    - name: shapevar
      title: 'Shape Variable (Optional)'
      type: Variable
      default: NULL
      suggested: [ nominal, ordinal ]
      permitted: [ factor ]
      description:
          R: >
            Optional categorical variable to map point shapes. When specified, switches to enhanced scatter plot.
            Works best with variables having 6 or fewer levels.

    - name: alphavar
      title: 'Alpha Variable (Optional)'
      type: Variable
      default: NULL
      suggested: [ continuous ]
      permitted: [ numeric ]
      description:
          R: >
            Optional continuous variable to map point transparency (alpha). When specified, switches to enhanced scatter plot.

    - name: labelvar
      title: 'Label Variable (Optional)'
      type: Variable
      default: NULL
      suggested: [ nominal, id ]
      permitted: [ factor, numeric ]
      description:
          R: >
            Optional variable to label points. Uses ggrepel to avoid overlapping labels.

    - name: showRugPlot
      title: 'Show Rug Plot'
      type: Bool
      default: false
      description:
          R: >
            Add rug plot along axes to show data distribution.

    - name: marginalType
      title: 'Marginal Plot Type'
      type: List
      options:
        - title: None
          name: none
        - title: Histogram
          name: histogram
        - title: Density
          name: density
        - title: Boxplot
          name: boxplot
      default: none
      description:
          R: >
            Add marginal distribution plots using ggExtra package.

    - name: smoothMethod
      title: 'Smooth Method'
      type: List
      options:
        - title: Linear Model (lm)
          name: lm
        - title: LOESS (loess)
          name: loess
        - title: GAM (gam)
          name: gam
      default: lm
      description:
          R: >
            Method for smooth trend line in enhanced scatter plot.



    - name: typestatistics
      title: 'Statistical Test Type'
      type: List
      options:
        - title: Parametric (Pearson) - for normally distributed data
          name: parametric
        - title: Nonparametric (Spearman) - for skewed data or ordinal scales
          name: nonparametric
        - title: Robust (bend correlation) - handles outliers well
          name: robust
        - title: Bayesian - provides evidence strength
          name: bayes
      default: parametric
      description:
          R: >
            Choose based on your data distribution. Pearson assumes normality (common for lab values after transformation). 
            Spearman works for any monotonic relationship (tumor grades, symptom scores). 
            Robust methods handle outlying patients. Bayesian analysis quantifies evidence strength for clinical decision-making.


    - name: mytitle
      title: Title
      type: String
      default: ''

    - name: xtitle
      title: X-Title
      type: String
      default: ''

    - name: ytitle
      title: Y-Title
      type: String
      default: ''


    - name: originaltheme
      title: Add GGStatsPlot Layer
      type: Bool
      default: false

    - name: resultssubtitle
      title: Statistical Results
      type: Bool
      default: false

    - name: conflevel
      title: Confidence Level
      type: Number
      default: 0.95
      min: 0
      max: 1
      description:
          R: >
            Confidence level for confidence intervals (between 0 and 1).

    - name: bfmessage
      title: Bayes Factor Message
      type: Bool
      default: false
      description:
          R: >
            Whether to display Bayes Factor in the subtitle when using Bayesian analysis.

    - name: k
      title: Decimal Places
      type: Integer
      default: 2
      min: 0
      max: 5
      description:
          R: >
            Number of decimal places for displaying statistics in the subtitle.

    - name: marginal
      title: Show Marginal Histograms
      type: Bool
      default: false
      description:
          R: >
            Whether to display marginal histogram plots on the axes using ggside.

    - name: xsidefill
      title: X-axis Marginal Fill Color
      type: String
      default: '#009E73'
      description:
          R: >
            Fill color for x-axis marginal histogram.

    - name: ysidefill
      title: Y-axis Marginal Fill Color
      type: String
      default: '#D55E00'
      description:
          R: >
            Fill color for y-axis marginal histogram.

    - name: pointsize
      title: Point Size
      type: Number
      default: 3
      min: 0.1
      max: 10
      description:
          R: >
            Size of the scatter plot points.

    - name: pointalpha
      title: Point Transparency
      type: Number
      default: 0.4
      min: 0
      max: 1
      description:
          R: >
            Transparency level for scatter plot points.

    - name: smoothlinesize
      title: Smooth Line Size
      type: Number
      default: 1.5
      min: 0.1
      max: 5
      description:
          R: >
            Width of the regression/smooth line.

    - name: smoothlinecolor
      title: Smooth Line Color
      type: String
      default: 'blue'
      description:
          R: >
            Color of the regression/smooth line.

    - name: plotwidth
      title: Plot Width
      type: Integer
      default: 600
      min: 300
      max: 1200
      description:
          R: >
            Width of the plot in pixels. Default is 600.

    - name: plotheight
      title: Plot Height
      type: Integer
      default: 450
      min: 300
      max: 800
      description:
          R: >
            Height of the plot in pixels. Default is 450.

...



# ggscatterstats(
#   data,
#   x,
#   y,
#   type = "parametric",
#   conf.level = 0.95,
#   bf.prior = 0.707,
#   bf.message = TRUE,
#   beta = 0.1,
#   k = 2L,
#   label.var = NULL,
#   label.expression = NULL,
#   point.label.args = list(size = 3),
#   formula = y ~ x,
#   smooth.line.args = list(size = 1.5, color = "blue"),
#   method = "lm",
#   method.args = list(),
#   point.args = list(size = 3, alpha = 0.4),
#   point.width.jitter = 0,
#   point.height.jitter = 0,
#   marginal = TRUE,
#   marginal.type = "histogram",
#   margins = "both",
#   marginal.size = 5,
#   xfill = "#009E73",
#   yfill = "#D55E00",
#   xparams = list(fill = xfill),
#   yparams = list(fill = yfill),
#   results.subtitle = TRUE,
#   xlab = NULL,
#   ylab = NULL,
#   title = NULL,
#   subtitle = NULL,
#   caption = NULL,
#   ggtheme = ggplot2::theme_bw(),
#   ggstatsplot.layer = TRUE,
#   ggplot.component = NULL,
#   output = "plot",
#   ...
# )
# Arguments
# data
# A dataframe (or a tibble) from which variables specified are to be taken. A matrix or tables will not be accepted.
#
# x
# The column in data containing the explanatory variable to be plotted on the x-axis. Can be entered either as a character string (e.g., "x") or as a bare expression (e.g, x).
#
# y
# The column in data containing the response (outcome) variable to be plotted on the y-axis. Can be entered either as a character string (e.g., "y") or as a bare expression (e.g, y).
#
# type
# Type of association between paired samples required (""parametric": Pearson's product moment correlation coefficient" or ""nonparametric": Spearman's rho" or ""robust": percentage bend correlation coefficient" or ""bayes": Bayes Factor for Pearson's r"). Corresponding abbreviations are also accepted: "p" (for parametric/pearson), "np" (nonparametric/spearman), "r" (robust), "bf" (for bayes factor), resp.
#
# conf.level
# Scalar between 0 and 1. If unspecified, the defaults return 95% confidence/credible intervals (0.95).
#
# bf.prior
# A number between 0.5 and 2 (default 0.707), the prior width to use in calculating Bayes factors.
#
# bf.message
# Logical that decides whether to display Bayes Factor in favor of the null hypothesis. This argument is relevant only for parametric test (default: false).
#
# beta
# bending constant (Default: 0.1). For more, see WRS2::pbcor().
#
# k
# Number of digits after decimal point (should be an integer) (Default: k = 2L).
#
# label.var
# Variable to use for points labels. Can be entered either as a character string (e.g., "var1") or as a bare expression (e.g, var1).
#
# label.expression
# An expression evaluating to a logical vector that determines the subset of data points to label. This argument can be entered either as a character string (e.g., "y < 4 & z < 20") or as a bare expression (e.g., y < 4 & z < 20).
#
# point.label.args
# A list of additional aesthetic arguments to be passed to ggrepel::geom_label_repel geom used to display the labels.
#
# formula
# Formula to use in smoothing function, eg. y ~ x, y ~ poly(x, 2), y ~ log(x). NULL by default, in which case method = NULL implies formula = y ~ x when there are fewer than 1,000 observations and formula = y ~ s(x, bs = "cs") otherwise.
#
# smooth.line.args
# A list of additional aesthetic arguments to be passed to ggplot2::geom_smooth geom used to display the regression line.
#
# method
# Smoothing method (function) to use, accepts either NULL or a character vector, e.g. "lm", "glm", "gam", "loess" or a function, e.g. MASS::rlm or mgcv::gam, stats::lm, or stats::loess. "auto" is also accepted for backwards compatibility. It is equivalent to NULL.
#
# For method = NULL the smoothing method is chosen based on the size of the largest group (across all panels). stats::loess() is used for less than 1,000 observations; otherwise mgcv::gam() is used with formula = y ~ s(x, bs = "cs") with method = "REML". Somewhat anecdotally, loess gives a better appearance, but is 𝑂(𝑁2)
# O
# (
# N
# 2
# )
#  in memory, so does not work for larger datasets.
#
# If you have fewer than 1,000 observations but want to use the same gam() model that method = NULL would use, then set method = "gam", formula = y ~ s(x, bs = "cs").
#
# method.args
# List of additional arguments passed on to the modelling function defined by method.
#
# point.args
# A list of additional aesthetic arguments to be passed to ggplot2::geom_point geom used to display the raw data points.
#
# point.width.jitter, point.height.jitter
# Degree of jitter in x and y direction, respectively. Defaults to 0 (0%) of the resolution of the data. Note that the jitter should not be specified in the point.args because this information will be passed to two different geoms: one displaying the points and the other displaying the labels for these points.
#
# marginal
# Decides whether ggExtra::ggMarginal() plots will be displayed; the default is TRUE.
#
# marginal.type
# Type of marginal distribution to be plotted on the axes ("histogram", "boxplot", "density", "violin", "densigram").
#
# margins
# Along which margins to show the plots. One of: [both, x, y].
#
# marginal.size
# Integer describing the relative size of the marginal plots compared to the main plot. A size of 5 means that the main plot is 5x wider and 5x taller than the marginal plots.
#
# xfill, yfill
# Character describing color fill for x and y axes marginal distributions (default: "#009E73" (for x) and "#D55E00" (for y)). Note that the defaults are colorblind-friendly.
#
# xparams
# List of extra parameters to use only for the marginal plot along the x axis.
#
# yparams
# List of extra parameters to use only for the marginal plot along the y axis.
#
# results.subtitle
# Decides whether the results of statistical tests are to be displayed as a subtitle (default: false). If set to FALSE, only the plot will be returned.
#
# xlab
# Labels for x and y axis variables. If NULL (default), variable names for x and y will be used.
#
# ylab
# Labels for x and y axis variables. If NULL (default), variable names for x and y will be used.
#
# title
# The text for the plot title.
#
# subtitle
# The text for the plot subtitle. Will work only if results.subtitle = FALSE.
#
# caption
# The text for the plot caption.
#
# ggtheme
# A function, ggplot2 theme name. Default value is ggplot2::theme_bw(). Any of the ggplot2 themes, or themes from extension packages are allowed (e.g., ggthemes::theme_fivethirtyeight(), hrbrthemes::theme_ipsum_ps(), etc.).
#
# ggstatsplot.layer
# Logical that decides whether theme_ggstatsplot theme elements are to be displayed along with the selected ggtheme (default: false). theme_ggstatsplot is an opinionated theme layer that override some aspects of the selected ggtheme.
#
# ggplot.component
# A ggplot component to be added to the plot prepared by ggstatsplot. This argument is primarily helpful for grouped_ variant of the current function. Default is NULL. The argument should be entered as a function.
#
# output
# If "expression", will return expression with statistical details, while "dataframe" will return a dataframe containing the results.
#
#
#
#
# grouped_ggscatterstats(
#   data,
#   x,
#   y,
#   grouping.var,
#   label.var = NULL,
#   label.expression = NULL,
#   title.prefix = NULL,
#   output = "plot",
#   ...,
#   plotgrid.args = list(),
#   title.text = NULL,
#   title.args = list(size = 16, fontface = "bold"),
#   caption.text = NULL,
#   caption.args = list(size = 10),
#   sub.text = NULL,
#   sub.args = list(size = 12)
# )
# Arguments
# data
# A dataframe (or a tibble) from which variables specified are to be taken. A matrix or tables will not be accepted.
#
# x
# The column in data containing the explanatory variable to be plotted on the x-axis. Can be entered either as a character string (e.g., "x") or as a bare expression (e.g, x).
#
# y
# The column in data containing the response (outcome) variable to be plotted on the y-axis. Can be entered either as a character string (e.g., "y") or as a bare expression (e.g, y).
#
# grouping.var
# A single grouping variable (can be entered either as a bare name x or as a string "x").
#
# label.var
# Variable to use for points labels. Can be entered either as a character string (e.g., "var1") or as a bare expression (e.g, var1).
#
# label.expression
# An expression evaluating to a logical vector that determines the subset of data points to label. This argument can be entered either as a character string (e.g., "y < 4 & z < 20") or as a bare expression (e.g., y < 4 & z < 20).
#
# title.prefix
# Character string specifying the prefix text for the fixed plot title (name of each factor level) (Default: NULL). If NULL, the variable name entered for grouping.var will be used.
#
# output
# If "expression", will return expression with statistical details, while "dataframe" will return a dataframe containing the results.
#
# ...
# Arguments passed on to ggscatterstats
#
# point.label.args
# A list of additional aesthetic arguments to be passed to ggrepel::geom_label_repel geom used to display the labels.
#
# smooth.line.args
# A list of additional aesthetic arguments to be passed to ggplot2::geom_smooth geom used to display the regression line.
#
# point.args
# A list of additional aesthetic arguments to be passed to ggplot2::geom_point geom used to display the raw data points.
#
# marginal
# Decides whether ggExtra::ggMarginal() plots will be displayed; the default is TRUE.
#
# point.width.jitter
# Degree of jitter in x and y direction, respectively. Defaults to 0 (0%) of the resolution of the data. Note that the jitter should not be specified in the point.args because this information will be passed to two different geoms: one displaying the points and the other displaying the labels for these points.
#
# point.height.jitter
# Degree of jitter in x and y direction, respectively. Defaults to 0 (0%) of the resolution of the data. Note that the jitter should not be specified in the point.args because this information will be passed to two different geoms: one displaying the points and the other displaying the labels for these points.
#
# marginal.type
# Type of marginal distribution to be plotted on the axes ("histogram", "boxplot", "density", "violin", "densigram").
#
# marginal.size
# Integer describing the relative size of the marginal plots compared to the main plot. A size of 5 means that the main plot is 5x wider and 5x taller than the marginal plots.
#
# xfill
# Character describing color fill for x and y axes marginal distributions (default: "#009E73" (for x) and "#D55E00" (for y)). Note that the defaults are colorblind-friendly.
#
# yfill
# Character describing color fill for x and y axes marginal distributions (default: "#009E73" (for x) and "#D55E00" (for y)). Note that the defaults are colorblind-friendly.
#
# type
# Type of association between paired samples required (""parametric": Pearson's product moment correlation coefficient" or ""nonparametric": Spearman's rho" or ""robust": percentage bend correlation coefficient" or ""bayes": Bayes Factor for Pearson's r"). Corresponding abbreviations are also accepted: "p" (for parametric/pearson), "np" (nonparametric/spearman), "r" (robust), "bf" (for bayes factor), resp.
#
# conf.level
# Scalar between 0 and 1. If unspecified, the defaults return 95% confidence/credible intervals (0.95).
#
# bf.prior
# A number between 0.5 and 2 (default 0.707), the prior width to use in calculating Bayes factors.
#
# beta
# bending constant (Default: 0.1). For more, see WRS2::pbcor().
#
# k
# Number of digits after decimal point (should be an integer) (Default: k = 2L).
#
# formula
# Formula to use in smoothing function, eg. y ~ x, y ~ poly(x, 2), y ~ log(x). NULL by default, in which case method = NULL implies formula = y ~ x when there are fewer than 1,000 observations and formula = y ~ s(x, bs = "cs") otherwise.
#
# method
# Smoothing method (function) to use, accepts either NULL or a character vector, e.g. "lm", "glm", "gam", "loess" or a function, e.g. MASS::rlm or mgcv::gam, stats::lm, or stats::loess. "auto" is also accepted for backwards compatibility. It is equivalent to NULL.For method = NULL the smoothing method is chosen based on the size of the largest group (across all panels). stats::loess() is used for less than 1,000 observations; otherwise mgcv::gam() is used with formula = y ~ s(x, bs = "cs") with method = "REML". Somewhat anecdotally, loess gives a better appearance, but is 𝑂(𝑁2)
# O
# (
# N
# 2
# )
#  in memory, so does not work for larger datasets.If you have fewer than 1,000 observations but want to use the same gam() model that method = NULL would use, then set method = "gam", formula = y ~ s(x, bs = "cs").
#
# method.args
# List of additional arguments passed on to the modelling function defined by method.
#
# ggtheme
# A function, ggplot2 theme name. Default value is ggplot2::theme_bw(). Any of the ggplot2 themes, or themes from extension packages are allowed (e.g., ggthemes::theme_fivethirtyeight(), hrbrthemes::theme_ipsum_ps(), etc.).
#
# ggstatsplot.layer
# Logical that decides whether theme_ggstatsplot theme elements are to be displayed along with the selected ggtheme (default: false). theme_ggstatsplot is an opinionated theme layer that override some aspects of the selected ggtheme.
#
# bf.message
# Logical that decides whether to display Bayes Factor in favor of the null hypothesis. This argument is relevant only for parametric test (default: false).
#
# results.subtitle
# Decides whether the results of statistical tests are to be displayed as a subtitle (default: false). If set to FALSE, only the plot will be returned.
#
# xlab
# Labels for x and y axis variables. If NULL (default), variable names for x and y will be used.
#
# ylab
# Labels for x and y axis variables. If NULL (default), variable names for x and y will be used.
#
# subtitle
# The text for the plot subtitle. Will work only if results.subtitle = FALSE.
#
# caption
# The text for the plot caption.
#
# ggplot.component
# A ggplot component to be added to the plot prepared by ggstatsplot. This argument is primarily helpful for grouped_ variant of the current function. Default is NULL. The argument should be entered as a function.
#
# margins
# Along which margins to show the plots. One of: [both, x, y].
#
# xparams
# List of extra parameters to use only for the marginal plot along the x axis.
#
# yparams
# List of extra parameters to use only for the marginal plot along the y axis.
#
# plotgrid.args
# A list of additional arguments to cowplot::plot_grid.
#
# title.text
# String or plotmath expression to be drawn as title for the combined plot.
#
# title.args
# A list of additional arguments provided to title, caption and sub, resp.
#
# caption.text
# String or plotmath expression to be drawn as the caption for the combined plot.
#
# caption.args
# A list of additional arguments provided to title, caption and sub, resp.
#
# sub.text
# The label with which the combined plot should be annotated. Can be a plotmath expression.
#
# sub.args
# A list of additional arguments provided to title, caption and sub, resp.
