{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "WebSearch",
      "WebFetch(domain:indrajeetpatil.github.io)",
      "WebFetch(domain:github.com)",
      "Bash(Rscript:*)",
      "Read(/Users/serdarbalci/Downloads/**)",
      "Read(/Users/serdarbalci/Downloads/**)",
      "Read(/Users/serdarbalci/Downloads/**)",
      "WebFetch(domain:cran.r-project.org)",
      "Bash(R:*)",
      "WebFetch(domain:ozancanozdemir.r-universe.dev)",
      "Bash(sed:*)",
      "Bash(grep:*)",
      "Read(/Users/serdarbalci/Downloads/**)",
      "WebFetch(domain:r-graph-gallery.com)",
      "WebFetch(domain:rdrr.io)",
      "Read(/var/folders/cd/2ybg5n514bdfsg2n2wnsspmw0000gn/T/TemporaryItems/NSIRD_screencaptureui_pLmnpg/**)",
      "Read(/Users/serdarbalci/Downloads/**)",
      "Bash(rg:*)",
      "Read(//var/folders/cd/2ybg5n514bdfsg2n2wnsspmw0000gn/T/TemporaryItems/NSIRD_screencaptureui_5j5fsh/**)",
      "Bash(for:*)",
      "Bash(do if ! grep -q \"refs:\" \"$file\")",
      "Bash(then echo \"Missing refs: $file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(do if grep -q \"refs:\" \"$file\")",
      "Bash(! grep -q \"ClinicoPathJamoviModule\" \"$file\")",
      "Bash(then echo \"Has refs but missing ClinicoPathJamoviModule: $file\")",
      "Bash(do if ! grep -q \"ClinicoPathJamoviModule\" \"$file\")",
      "Bash(then echo \"Still missing ClinicoPathJamoviModule: $file\")",
      "Read(//Users/serdarbalci/Downloads/**)",
      "Read(//var/folders/cd/2ybg5n514bdfsg2n2wnsspmw0000gn/T/TemporaryItems/NSIRD_screencaptureui_jFfFqp/**)",
      "Bash(find:*)",
      "WebFetch(domain:www.rdocumentation.org)",
      "Bash(/dev/null)",
      "Read(//Users/serdarbalci/Documents/GitHub/ClinicoPathDescriptives/R/**)",
      "WebFetch(domain:jthomasmock.github.io)",
      "Bash(python3:*)",
      "mcp__ide__getDiagnostics",
      "Bash(awk:*)",
      "Read(///**)",
      "Bash(cut:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:selkamand.github.io)",
      "WebFetch(domain:www.serdarbalci.com)",
      "Bash(do echo \"=== $param ===\")",
      "WebFetch(domain:nrennie.rbind.io)",
      "WebFetch(domain:bookdown.org)",
      "Read(//Users/serdarbalci/Documents/GitHub/BrawStats-for-Jamovi-Full/**)",
      "Bash(yamllint:*)",
      "WebFetch(domain:www.riinu.me)",
      "Bash(do echo \"=== Checking .$func ===\")",
      "Bash(echo:*)",
      "Read(//Users/serdarbalci/Documents/GitHub/jPwrSS/**)",
      "Bash(comm:*)",
      "WebFetch(domain:jbengler.github.io)",
      "Read(//Users/serdarbalci/Documents/GitHub/**)",
      "Bash(do echo \"=== Checking $dir ===\")",
      "Bash(ls:*)",
      "WebFetch(domain:easystats.github.io)",
      "WebFetch(domain:lucymcgowan.github.io)",
      "WebFetch(domain:manual.rpact.org)",
      "WebFetch(domain:stats.oarc.ucla.edu)",
      "WebFetch(domain:shariq-mohammed.github.io)",
      "Bash(do echo \"$file:\")",
      "Bash(do)",
      "Bash(if grep -q \"examples:\" \"$file\")",
      "Bash(then)",
      "Bash(else)",
      "Bash(do echo -n \"$opt: \")",
      "Bash(do echo -n \"$opt (via options): \")",
      "WebFetch(domain:krassowski.github.io)",
      "Bash(node:*)",
      "WebFetch(domain:forum.jamovi.org)",
      "WebFetch(domain:gaospecial.github.io)",
      "WebFetch(domain:rpubs.com)",
      "Bash(then echo \"✅ $arg\")",
      "Bash(else echo \"❌ $arg\")",
      "Bash(do echo -n \"$method: \")",
      "Bash(if grep -q \"\\.$method.*=\" R/survivalPower.b.R)",
      "Bash(then echo \"✅ EXISTS\")",
      "Bash(else echo \"❌ MISSING\")",
      "Bash(do echo -n \".$method: \")",
      "Bash(if grep -q \"\\.$method.*=.*function\" R/survivalPower.b.R)",
      "Bash(do echo -n \"$output: \")",
      "Bash(if grep -q \"self$results$$output$setContent\\|self$results$$output$setState\" R/survivalPower.b.R)",
      "Bash(then echo \"✅ POPULATED\")",
      "Bash(else echo \"❌ NOT POPULATED\")",
      "Bash(xargs:*)",
      "Bash(/Users/serdarbalci/Documents/GitHub/ClinicoPathJamoviModule/jamovi/stagemigration.r.yaml)",
      "WebFetch(domain:cloud.r-project.org)",
      "Bash(cat:*)",
      "Bash({ echo \"=== Files referencing ''''ein_agreement'''' in data/ ===\" ls -1 data/*agreement*)",
      "Bash(head -10 })",
      "Bash({ echo \"=== agreement.a.yaml (should be meddecide) ===\" grep -A1 \"^name:\" jamovi/agreement.a.yaml)",
      "Bash(head -5 echo \"\" echo \"=== pathagreement.a.yaml (should be OncoPathT) ===\" grep -A1 \"^name:\" jamovi/pathagreement.a.yaml)",
      "Bash(head -5 })",
      "Bash({ echo \"=== CSV files NOT in data/ ===\" find . -name \"*.csv\" -not -path \"./data/*\" -not -path \"./.git/*\" -not -path \"./node_modules/*\")",
      "Bash(head -20 })",
      "Bash(do echo \"=== $file ===\" ls -lh data/$file.* vignettes/data/$file.*)",
      "WebFetch(domain:chstock.github.io)",
      "WebFetch(domain:stemangiola.github.io)",
      "WebFetch(domain:lubridate.tidyverse.org)"
    ],
    "deny": [],
    "ask": [],
    "additionalDirectories": [
      "/Users/serdarbalci/Documents/GitHub/conttablesplus",
      "/Users/serdarbalci/Documents/GitHub/JamoviTest",
      "/private/tmp",
      "/Users/serdarbalci/Documents/GitHub/OncoPath",
      "/Users/serdarbalci/Documents/GitHub/ClinicoPathDescriptives",
      "/Users/serdarbalci/Documents/GitHub/jjstatsplot",
      "/Users/serdarbalci/Documents/GitHub/meddecide",
      "/Users/serdarbalci/Documents/GitHub/jsurvival"
    ]
  }
}