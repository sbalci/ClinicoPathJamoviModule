% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clinicalheatmap.b.R
\name{clinicalheatmapClass}
\alias{clinicalheatmapClass}
\title{Clinical Heatmap with tidyheatmaps}
\value{
A jamovi analysis object containing the clinical heatmap and supporting information
}
\description{
Advanced heatmap visualization for clinical and biomedical data using the tidyheatmaps package.
This function creates publication-ready heatmaps from tidy data with support for clinical annotations,
multiple scaling methods, and comprehensive customization options. Perfect for visualizing biomarker
expression patterns, treatment responses, genomic data, and quality control metrics.
}
\details{
The Clinical Heatmap module leverages the powerful tidyheatmaps package to create sophisticated
visualizations of multivariate clinical data. It supports various data types and use cases:

\strong{Supported Data Types:}
\itemize{
\item \strong{Biomarker Expression:} IHC scores, molecular markers, protein levels
\item \strong{Genomic Data:} Gene expression, mutation status, copy number variations
\item \strong{Clinical Metrics:} Laboratory values, vital signs, diagnostic scores
\item \strong{Quality Control:} Batch effects, instrument performance, reproducibility
\item \strong{Treatment Response:} Longitudinal measurements, dose-response relationships
}

\strong{Key Features:}
\itemize{
\item \strong{Tidy Data Integration:} Works directly with long-format clinical datasets
\item \strong{Clinical Annotations:} Row and column annotations for patient/biomarker characteristics
\item \strong{Flexible Scaling:} Row, column, or bidirectional Z-score normalization
\item \strong{Hierarchical Clustering:} Automatic pattern discovery with customizable clustering
\item \strong{Color Palettes:} Clinical-friendly color schemes including colorblind-safe options
\item \strong{Missing Data Handling:} Multiple strategies for incomplete clinical datasets
\item \strong{Export Options:} Publication-ready outputs with customizable dimensions
}
}
\section{Clinical Applications}{

\itemize{
\item \strong{Biomarker Profiling:} Visualize multi-marker expression panels across patient cohorts
\item \strong{Precision Medicine:} Display genomic alterations and therapeutic targets
\item \strong{Quality Assurance:} Monitor laboratory performance and batch effects
\item \strong{Clinical Trials:} Show treatment response patterns and dose relationships
\item \strong{Diagnostic Patterns:} Reveal disease subtypes and molecular classifications
}
}

\section{Data Format Requirements}{

The function expects data in "tidy" (long) format with three essential variables:
\itemize{
\item \strong{Row Variable:} Defines heatmap rows (e.g., patient IDs, gene names)
\item \strong{Column Variable:} Defines heatmap columns (e.g., biomarkers, time points)
\item \strong{Value Variable:} Numeric values to visualize (e.g., expression levels, scores)
}
}

\section{Scaling Methods}{

\itemize{
\item \strong{None:} Raw values displayed without transformation
\item \strong{Row:} Z-score normalization within each row (standardizes across columns)
\item \strong{Column:} Z-score normalization within each column (standardizes across rows)
\item \strong{Both:} Global Z-score normalization across entire dataset
}
}

\section{Missing Data Strategies}{

\itemize{
\item \strong{Exclude:} Remove rows/columns with missing values (complete cases only)
\item \strong{Mean:} Replace missing values with column/row means
\item \strong{Median:} Replace missing values with column/row medians (robust to outliers)
\item \strong{Zero:} Replace missing values with zero (appropriate for some clinical scales)
}
}

\examples{
\dontrun{
# TODO: Add proper examples with working datasets
# Currently commented to prevent installation errors
# Need to use existing datasets from ClinicoPathDescriptives

# # Example 1: Basic biomarker heatmap
# data(histopathology)
#
# # Create sample biomarker data in long format
# biomarker_data <- data.frame(
#   patient_id = rep(paste0("P", 1:50), each = 4),
#   biomarker = rep(c("ER", "PR", "HER2", "Ki67"), 50),
#   expression = rnorm(200, mean = 50, sd = 20)
# )
#
# clinicalheatmap(
#   data = biomarker_data,
#   rowVar = "patient_id",
#   colVar = "biomarker",
#   valueVar = "expression",
#   scaleMethod = "row",
#   colorPalette = "RdBu"
# )
#
# # Example 2: Gene expression with clinical annotations
# gene_data <- expand.grid(
#   sample_id = paste0("S", 1:30),
#   gene = paste0("Gene", 1:20)
# )
# gene_data$expression <- rnorm(nrow(gene_data), mean = 0, sd = 1)
# gene_data$tumor_type <- rep(c("TypeA", "TypeB", "TypeC"), length.out = 30)
#
# clinicalheatmap(
#   data = gene_data,
#   rowVar = "sample_id",
#   colVar = "gene",
#   valueVar = "expression",
#   annotationCols = "tumor_type",
#   scaleMethod = "column",
#   clusterRows = TRUE,
#   clusterCols = TRUE
# )
}
}
\section{Super classes}{
\code{\link[jmvcore:Analysis]{jmvcore::Analysis}} -> \code{ClinicoPath::clinicalheatmapBase} -> \code{clinicalheatmapClass}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-clinicalheatmapClass-clone}{\code{clinicalheatmapClass$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".createImage"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.createImage'><code>jmvcore::Analysis$.createImage()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".createImages"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.createImages'><code>jmvcore::Analysis$.createImages()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".createPlotObject"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.createPlotObject'><code>jmvcore::Analysis$.createPlotObject()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".load"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.load'><code>jmvcore::Analysis$.load()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".render"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.render'><code>jmvcore::Analysis$.render()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".save"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.save'><code>jmvcore::Analysis$.save()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".savePart"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.savePart'><code>jmvcore::Analysis$.savePart()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".setCheckpoint"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.setCheckpoint'><code>jmvcore::Analysis$.setCheckpoint()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".setParent"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.setParent'><code>jmvcore::Analysis$.setParent()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".setReadDatasetHeaderSource"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.setReadDatasetHeaderSource'><code>jmvcore::Analysis$.setReadDatasetHeaderSource()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".setReadDatasetSource"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.setReadDatasetSource'><code>jmvcore::Analysis$.setReadDatasetSource()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".setResourcesPathSource"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.setResourcesPathSource'><code>jmvcore::Analysis$.setResourcesPathSource()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id=".setStatePathSource"><a href='../../jmvcore/html/Analysis.html#method-Analysis-.setStatePathSource'><code>jmvcore::Analysis$.setStatePathSource()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="addAddon"><a href='../../jmvcore/html/Analysis.html#method-Analysis-addAddon'><code>jmvcore::Analysis$addAddon()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="asProtoBuf"><a href='../../jmvcore/html/Analysis.html#method-Analysis-asProtoBuf'><code>jmvcore::Analysis$asProtoBuf()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="asSource"><a href='../../jmvcore/html/Analysis.html#method-Analysis-asSource'><code>jmvcore::Analysis$asSource()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="check"><a href='../../jmvcore/html/Analysis.html#method-Analysis-check'><code>jmvcore::Analysis$check()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="init"><a href='../../jmvcore/html/Analysis.html#method-Analysis-init'><code>jmvcore::Analysis$init()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="optionsChangedHandler"><a href='../../jmvcore/html/Analysis.html#method-Analysis-optionsChangedHandler'><code>jmvcore::Analysis$optionsChangedHandler()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="postInit"><a href='../../jmvcore/html/Analysis.html#method-Analysis-postInit'><code>jmvcore::Analysis$postInit()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="print"><a href='../../jmvcore/html/Analysis.html#method-Analysis-print'><code>jmvcore::Analysis$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="readDataset"><a href='../../jmvcore/html/Analysis.html#method-Analysis-readDataset'><code>jmvcore::Analysis$readDataset()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="run"><a href='../../jmvcore/html/Analysis.html#method-Analysis-run'><code>jmvcore::Analysis$run()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="serialize"><a href='../../jmvcore/html/Analysis.html#method-Analysis-serialize'><code>jmvcore::Analysis$serialize()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="setError"><a href='../../jmvcore/html/Analysis.html#method-Analysis-setError'><code>jmvcore::Analysis$setError()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="setStatus"><a href='../../jmvcore/html/Analysis.html#method-Analysis-setStatus'><code>jmvcore::Analysis$setStatus()</code></a></span></li>
<li><span class="pkg-link" data-pkg="jmvcore" data-topic="Analysis" data-id="translate"><a href='../../jmvcore/html/Analysis.html#method-Analysis-translate'><code>jmvcore::Analysis$translate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="ClinicoPath" data-topic="clinicalheatmapBase" data-id="initialize"><a href='../../ClinicoPath/html/clinicalheatmapBase.html#method-clinicalheatmapBase-initialize'><code>ClinicoPath::clinicalheatmapBase$initialize()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clinicalheatmapClass-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clinicalheatmapClass-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{clinicalheatmapClass$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
