% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/waterfall.h.R
\name{waterfall}
\alias{waterfall}
\title{Treatment Response Analysis}
\usage{
waterfall(
  data,
  patientID,
  responseVar,
  timeVar = NULL,
  groupVar = NULL,
  inputType = "percentage",
  sortBy = "response",
  showThresholds = FALSE,
  labelOutliers = FALSE,
  showMedian = FALSE,
  showCI = FALSE,
  minResponseForLabel = 50,
  colorBy = "recist",
  colorScheme = "jamovi",
  barAlpha = 1,
  barWidth = 0.7,
  showWaterfallPlot = TRUE,
  showSpiderPlot = TRUE,
  spiderColorBy = "response",
  spiderColorScheme = "classic"
)
}
\arguments{
\item{data}{The data as a data frame.}

\item{patientID}{Variable containing patient identifiers.}

\item{responseVar}{Response variable: either raw tumor measurements or
pre-calculated percentage changes. For raw measurements, requires a time
variable with baseline (time = 0). For percentages, negative values
indicate tumor shrinkage (improvement).}

\item{timeVar}{Time point of measurement for spider plot (e.g., months from
baseline)}

\item{groupVar}{Optional grouping variable for coloring bars by patient
groups (e.g., treatment arms, disease subtypes). When specified, overrides
RECIST category coloring to show group-based colors.}

\item{inputType}{Specify data format: 'raw' for actual measurements (will
calculate percent change) or 'percentage' for pre-calculated percentage
changes}

\item{sortBy}{Sort the waterfall plot by best response or patient ID.}

\item{showThresholds}{Show +20 percent and -30 percent RECIST thresholds.}

\item{labelOutliers}{Label responses exceeding the specified threshold.}

\item{showMedian}{Show median response as a horizontal line.}

\item{showCI}{Show confidence interval around median response.}

\item{minResponseForLabel}{Minimum response value for labels to be
displayed.}

\item{colorBy}{Coloring method: RECIST categories or patient groups
(requires Group Variable).}

\item{colorScheme}{Color scheme for waterfall plot. 'Colorful' provides
distinct colors for group-based coloring.}

\item{barAlpha}{Transparency of bars in waterfall plot.}

\item{barWidth}{Width of bars in waterfall plot.}

\item{showWaterfallPlot}{Display the waterfall plot showing best response
for each patient.}

\item{showSpiderPlot}{Display spider plot showing response trajectories
over time (requires time variable).}

\item{spiderColorBy}{Coloring method for spider plot: Response status or
patient groups. For backward compatibility, defaults to response status
coloring.}

\item{spiderColorScheme}{Color scheme for spider plot lines and points.}
}
\value{
A results object containing:
\tabular{llllll}{
\code{results$todo} \tab \tab \tab \tab \tab a html \cr
\code{results$clinicalSummary} \tab \tab \tab \tab \tab a html \cr
\code{results$aboutAnalysis} \tab \tab \tab \tab \tab a html \cr
\code{results$summaryTable} \tab \tab \tab \tab \tab a table \cr
\code{results$personTimeTable} \tab \tab \tab \tab \tab a table \cr
\code{results$clinicalMetrics} \tab \tab \tab \tab \tab a table \cr
\code{results$waterfallplot} \tab \tab \tab \tab \tab an image \cr
\code{results$spiderplot} \tab \tab \tab \tab \tab an image \cr
\code{results$addResponseCategory} \tab \tab \tab \tab \tab an output \cr
}

Tables can be converted to data frames with \code{asDF} or \code{\link{as.data.frame}}. For example:

\code{results$summaryTable$asDF}

\code{as.data.frame(results$summaryTable)}
}
\description{
Creates waterfall and spider plots to analyze tumor response data following
RECIST criteria. Supports both raw tumor measurements and pre-calculated
percentage changes. Provides comprehensive response analysis including ORR,
DCR, and person-time metrics.
}
\examples{
\donttest{
# Example 1: Percentage data
data_pct <- data.frame(
    PatientID = paste0("PT", 1:5),
    Response = c(-60, -35, -10, 15, 45)
)
waterfall(
    data = data_pct,
    patientID = "PatientID",
    responseVar = "Response",
    inputType = "percentage"
)

# Example 2: Raw measurements
data_raw <- data.frame(
    PatientID = rep(paste0("PT", 1:3), each = 3),
    Time = rep(c(0, 2, 4), 3),
    Measurement = c(50, 30, 25, 60, 45, 40, 55, 50, 48)
)
waterfall(
    data = data_raw,
    patientID = "PatientID",
    responseVar = "Measurement",
    timeVar = "Time",
    inputType = "raw"
)
}
}
