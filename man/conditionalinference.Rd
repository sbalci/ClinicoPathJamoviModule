% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conditionalinference.h.R
\name{conditionalinference}
\alias{conditionalinference}
\title{Conditional Inference Trees for Survival}
\usage{
conditionalinference(
  data,
  time,
  event,
  predictors,
  strata,
  teststat = "quad",
  testtype = "Bonferroni",
  mincriterion = 0.95,
  minsplit = 20,
  minbucket = 7,
  maxdepth = 5,
  nresample = 9999,
  logrank_scores = TRUE,
  show_splits = TRUE,
  show_nodes = TRUE,
  show_importance = TRUE,
  plot_tree = TRUE,
  plot_survival = TRUE,
  plot_importance = FALSE,
  mtry,
  replace = FALSE,
  subset
)
}
\arguments{
\item{data}{The data as a data frame.}

\item{time}{Time to event variable (numeric). For right-censored data, this
is the  time from study entry to event or censoring.}

\item{event}{Event indicator variable. For survival analysis: 0 = censored,
1 = event. For competing risks: 0 = censored, 1+ = different event types.}

\item{predictors}{Variables to use for tree construction. Can include
numeric,  ordinal, and nominal variables. The algorithm handles mixed-type
predictors optimally.}

\item{strata}{Optional stratification variable for stratified survival
analysis. Creates separate baseline hazards for each stratum.}

\item{teststat}{Test statistic to use. 'quad' uses quadratic form for
multivariate tests, 'max' uses maximum-type statistic. Quadratic form is
more powerful for small effects, maximum-type for large effects.}

\item{testtype}{Multiple testing correction method. Bonferroni provides
conservative but reliable correction. Monte Carlo uses permutation-based
p-values.}

\item{mincriterion}{Minimum criterion (1 - p-value) for variable selection.
Higher values create more conservative trees with fewer splits. Default
0.95 corresponds to significance level of 0.05.}

\item{minsplit}{Minimum number of observations required in a node before
splitting. Higher values create simpler trees and reduce overfitting.}

\item{minbucket}{Minimum number of observations in terminal nodes. Should
be smaller than minsplit. Higher values increase tree stability.}

\item{maxdepth}{Maximum depth of the tree. Controls tree complexity and
prevents overfitting. Deeper trees may overfit, shallower trees may
underfit.}

\item{nresample}{Number of Monte Carlo resamples for p-value computation
when using Monte Carlo test type. More resamples provide more accurate
p-values but increase computation time.}

\item{logrank_scores}{Use log-rank scores for survival splitting. When
TRUE, uses log-rank statistics optimized for survival data. When FALSE,
uses standard conditional inference.}

\item{show_splits}{Display detailed split statistics including test
statistics, p-values, and variable importance measures.}

\item{show_nodes}{Display detailed information for each terminal node
including Kaplan-Meier estimates, risk tables, and survival summaries.}

\item{show_importance}{Calculate and display variable importance measures
based on the improvement in prediction accuracy.}

\item{plot_tree}{Generate tree structure plot with nodes, splits, and
survival curves.}

\item{plot_survival}{Plot Kaplan-Meier survival curves for each terminal
node with confidence intervals and risk tables.}

\item{plot_importance}{Generate variable importance plot showing relative
importance of predictors in tree construction.}

\item{mtry}{Number of variables randomly selected at each split. Leave
empty to use all variables. Setting this creates a random forest-like
approach.}

\item{replace}{Use bootstrap sampling with replacement for tree
construction. Creates more robust trees but may reduce interpretability.}

\item{subset}{Fraction of observations to use for tree construction. Leave
empty to use all observations. Useful for large datasets.}
}
\value{
A results object containing:
\tabular{llllll}{
\code{results$todo} \tab \tab \tab \tab \tab a html \cr
\code{results$modelSummary} \tab \tab \tab \tab \tab a table \cr
\code{results$splitStatistics} \tab \tab \tab \tab \tab a table \cr
\code{results$nodeDetails} \tab \tab \tab \tab \tab a table \cr
\code{results$variableImportance} \tab \tab \tab \tab \tab a table \cr
\code{results$treePlot} \tab \tab \tab \tab \tab an image \cr
\code{results$survivalPlot} \tab \tab \tab \tab \tab an image \cr
\code{results$importancePlot} \tab \tab \tab \tab \tab an image \cr
}

Tables can be converted to data frames with \code{asDF} or \code{\link{as.data.frame}}. For example:

\code{results$modelSummary$asDF}

\code{as.data.frame(results$modelSummary)}
}
\description{
Conditional Inference Trees for survival analysis using unbiased recursive
partitioning. This method addresses the variable selection bias inherent in
traditional CART by employing conditional inference procedures. The
algorithm separates variable selection from splitting point selection,
providing unbiased tree structures particularly valuable for survival data
with mixed-type predictors and complex censoring patterns. Features include
statistical significance-based stopping criteria, handling of  missing
values without surrogate splits, and robust performance with correlated
predictors. The method is particularly suitable for exploratory survival
analysis and biomarker discovery in clinical research.
}
\examples{
result <- conditionalinference(
    data = mydata,
    time = "time_to_event",
    event = "event_indicator",
    predictors = c("age", "stage", "biomarker"),
    mincriterion = 0.95,
    minsplit = 20,
    minbucket = 7,
    maxdepth = 5
)

}
