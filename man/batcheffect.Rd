% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/batcheffect.h.R
\name{batcheffect}
\alias{batcheffect}
\title{Batch Effect Control & Quality Assessment}
\usage{
batcheffect(
  data,
  features,
  batch_var,
  biological_var,
  perform_pca = TRUE,
  perform_combat = TRUE,
  feature_quality = TRUE,
  redundancy_analysis = TRUE,
  variance_threshold = 0.01,
  correlation_threshold = 0.95,
  outlier_method = "robust",
  outlier_threshold = 3,
  pca_components = 3,
  missing_threshold = 20,
  show_plots = TRUE,
  combat_parametric = TRUE,
  save_corrected = FALSE
)
}
\arguments{
\item{data}{the data as a data frame}

\item{features}{Numeric feature variables to assess for batch effects
(e.g., biomarkers, image features)}

\item{batch_var}{Categorical variable indicating batch/technical groups
(e.g., institution, date, instrument)}

\item{biological_var}{Optional biological grouping variable to preserve
during batch correction}

\item{perform_pca}{Perform Principal Component Analysis to visualize batch
effects}

\item{perform_combat}{Apply ComBat correction to remove batch effects while
preserving biological variation}

\item{feature_quality}{Assess individual feature quality including
distribution analysis and outlier detection}

\item{redundancy_analysis}{Analyze feature redundancy and correlation
structure}

\item{variance_threshold}{Threshold for removing low-variance features (0 =
no filtering)}

\item{correlation_threshold}{Threshold for identifying highly correlated
redundant features}

\item{outlier_method}{Method for outlier detection in feature quality
assessment}

\item{outlier_threshold}{Threshold for outlier detection (standard
deviations or IQR multiplier)}

\item{pca_components}{Number of principal components to compute and
visualize}

\item{missing_threshold}{Maximum percentage of missing values allowed per
feature}

\item{show_plots}{Generate diagnostic plots including PCA plots and quality
assessments}

\item{combat_parametric}{Use parametric ComBat (faster) vs non-parametric
(more robust)}

\item{save_corrected}{Add ComBat-corrected features to the dataset}
}
\value{
A results object containing:
\tabular{llllll}{
\code{results$instructions} \tab \tab \tab \tab \tab Instructions for batch effect analysis and quality control \cr
\code{results$summary} \tab \tab \tab \tab \tab Overall summary of data quality and batch effect assessment \cr
\code{results$batch_detection} \tab \tab \tab \tab \tab Statistical tests and metrics for batch effect detection \cr
\code{results$feature_quality} \tab \tab \tab \tab \tab Quality metrics for individual features \cr
\code{results$redundancy} \tab \tab \tab \tab \tab Analysis of highly correlated and redundant features \cr
\code{results$combat_results} \tab \tab \tab \tab \tab Results and effectiveness of ComBat batch correction \cr
\code{results$pca_plot} \tab \tab \tab \tab \tab PCA plots showing batch effects before and after correction \cr
\code{results$quality_plot} \tab \tab \tab \tab \tab Distribution and quality assessment plots for features \cr
\code{results$correlation_plot} \tab \tab \tab \tab \tab Correlation matrix heatmap for redundancy analysis \cr
\code{results$interpretation} \tab \tab \tab \tab \tab Clinical context and quality control recommendations \cr
}

Tables can be converted to data frames with \code{asDF} or \code{\link{as.data.frame}}. For example:

\code{results$summary$asDF}

\code{as.data.frame(results$summary)}
}
\description{
Advanced batch effect detection and correction for tabular data analysis.
Essential for digital pathology and multi-institutional studies where
technical variation can confound biological signals ("garbage in, garbage
out").
}
\details{
Implements PCA visualization, ComBat correction, feature quality
assessment,
and comprehensive quality control metrics for high-dimensional data.
}
\examples{
data('your_data')

batcheffect(data = your_data,
           features = feature_variables,
           batch_var = batch_id,
           biological_var = treatment_group,
           perform_pca = TRUE,
           perform_combat = TRUE)

}
