% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survivalvalidation.h.R
\name{survivalvalidation}
\alias{survivalvalidation}
\title{Survival Model Validation}
\usage{
survivalvalidation(
  data,
  time,
  status,
  predicted_risk,
  model_formula = "",
  external_data,
  validation_method = "cv",
  cv_folds = 10,
  bootstrap_samples = 500,
  concordance_index = TRUE,
  time_dependent_auc = TRUE,
  prediction_error = TRUE,
  integrated_brier = TRUE,
  calibration_plot = TRUE,
  decision_curve = TRUE,
  time_points = "1,2,3,5",
  max_time = 0,
  plot_roc_curves = TRUE,
  plot_calibration = TRUE,
  plot_decision_curve = TRUE,
  plot_prediction_error = TRUE,
  confidence_level = 0.95,
  smoothing = TRUE,
  risk_groups = 4,
  competing_risks = FALSE,
  cause_specific,
  model_comparison = FALSE,
  model_names = "",
  net_benefit_thresholds = "0.01,0.05,0.1,0.2,0.3"
)
}
\arguments{
\item{data}{The data as a data frame.}

\item{time}{Time to event or censoring}

\item{status}{Event indicator variable}

\item{predicted_risk}{Model predictions to validate}

\item{model_formula}{Variables for Cox model if predictions not provided}

\item{external_data}{Optional external dataset for validation}

\item{validation_method}{Validation approach}

\item{cv_folds}{CV fold specification}

\item{bootstrap_samples}{Bootstrap iterations}

\item{concordance_index}{Compute C-index}

\item{time_dependent_auc}{Compute time-dependent AUC}

\item{prediction_error}{Compute prediction error curves}

\item{integrated_brier}{Compute IBS}

\item{calibration_plot}{Create calibration assessment}

\item{decision_curve}{DCA for clinical decision making}

\item{time_points}{Specific times for assessment}

\item{max_time}{Upper time limit}

\item{plot_roc_curves}{Generate ROC plots}

\item{plot_calibration}{Generate calibration plots}

\item{plot_decision_curve}{Generate DCA plots}

\item{plot_prediction_error}{Generate PEC plots}

\item{confidence_level}{CI level}

\item{smoothing}{Smooth curve estimation}

\item{risk_groups}{Risk group stratification}

\item{competing_risks}{Competing risks consideration}

\item{cause_specific}{Cause-specific event variable}

\item{model_comparison}{Multi-model comparison}

\item{model_names}{Model labels for comparison}

\item{net_benefit_thresholds}{DCA threshold range}
}
\value{
A results object containing:
\tabular{llllll}{
\code{results$todo} \tab \tab \tab \tab \tab a html \cr
\code{results$summary} \tab \tab \tab \tab \tab a html \cr
\code{results$performanceTable} \tab \tab \tab \tab \tab a table \cr
\code{results$concordanceTable} \tab \tab \tab \tab \tab a table \cr
\code{results$aucTable} \tab \tab \tab \tab \tab a table \cr
\code{results$brierTable} \tab \tab \tab \tab \tab a table \cr
\code{results$calibrationTable} \tab \tab \tab \tab \tab a table \cr
\code{results$decisionTable} \tab \tab \tab \tab \tab a table \cr
\code{results$rocPlot} \tab \tab \tab \tab \tab an image \cr
\code{results$calibrationPlot} \tab \tab \tab \tab \tab an image \cr
\code{results$decisionPlot} \tab \tab \tab \tab \tab an image \cr
\code{results$predErrorPlot} \tab \tab \tab \tab \tab an image \cr
\code{results$calibrationMetrics} \tab \tab \tab \tab \tab a table \cr
\code{results$validationSummary} \tab \tab \tab \tab \tab a html \cr
\code{results$modelComparison} \tab \tab \tab \tab \tab a table \cr
\code{results$externalValidation} \tab \tab \tab \tab \tab a html \cr
\code{results$competingRisksMetrics} \tab \tab \tab \tab \tab a table \cr
\code{results$interpretation} \tab \tab \tab \tab \tab a html \cr
}

Tables can be converted to data frames with \code{asDF} or \code{\link{as.data.frame}}. For example:

\code{results$performanceTable$asDF}

\code{as.data.frame(results$performanceTable)}
}
\description{
Comprehensive validation and performance assessment for survival models.
Includes prediction error curves, time-dependent ROC analysis, calibration
plots,
and decision curve analysis for clinical decision making.
}
\examples{
\donttest{
# Example: Validate Cox regression model
survivalvalidation(
    data = cancer_data,
    time = followup_time,
    status = death_status,
    predicted_risk = risk_score,
    validation_method = "cv",
    time_points = c(1, 3, 5)
)
}
}
